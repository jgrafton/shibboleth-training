## DuoOIDC default integration settings

# Generic flow properties to adjust behavior
#idp.authn.DuoOIDC.order = 1000
#idp.authn.DuoOIDC.nonBrowserSupported = false
#idp.authn.DuoOIDC.forcedAuthenticationSupported = true
# The list below should be changed to reflect whatever locally- or
# community-defined values are appropriate to represent Duo. It is
# strongly advised that the value not be specific to Duo or any
# particular technology to avoid lock-in.
idp.authn.DuoOIDC.supportedPrincipals = \
    saml2/http://example.org/ac/classes/mfa, \
    saml1/http://example.org/ac/classes/mfa


# Configure for your particular integration settings
idp.duo.oidc.apiHost = hostname
idp.duo.oidc.clientId = clientid
# Static redirect_uri, comment out if you want to use a computed one, see below
idp.duo.oidc.redirectURL = https://<hostname>:<port>/idp/profile/Authn/Duo/2FA/duo-callback
# We suggest defining this in credentials/secrets.properties
#idp.duo.oidc.secretKey = key

## Enable the Duo health check for every 2FA request. Defaults to true to tightly follow 
## the Duo described workflow. However, it is not *strictly* required. 
#idp.duo.oidc.healthcheck.enabled=true

# If a redirect_uri is not explicitly declared above, one can be inferred from each
# request's Host header. To avoid Host header injection attacks, the allowed origins
# must be specified here. Origins are comma seperated. Do not specify the port when
# using the default ports.
#idp.duo.oidc.redirecturl.allowedOrigins = https://localhost

## If false this will prevent the addition of the default principals even if a ContextToPrincipalMappingStrategy
## is not set.
#idp.authn.DuoOIDC.addDefaultPrincipals = true

# Passwordless integration if desired
#idp.duo.oidc.passwordless.enabled = false
#idp.duo.oidc.passwordless.apiHost = %{idp.duo.oidc.apiHost}
#idp.duo.oidc.passwordless.clientId = clientId
# We suggest defining this in credentials/secrets.properties
#idp.duo.oidc.passwordless.secretKey = key
#idp.duo.oidc.passwordless.ssoBypassFieldName = donotcache
# Comma-delimited list of factors allowed as a safety check
#idp.duo.oidc.passwordless.allowedFactors = Platform authenticator (2fa)
# Name of cookie used to "grant" access to passwordless login option
#idp.duo.oidc.passwordless.guardCookieName = __Host-shib_idp_duo_passwordless
# Override to plug in your own condition bean governing eligibility.
#idp.duo.oidc.passwordless.guardCondition = (internal default)

# Settings for Passwordless cookie management flow
#idp.duo.oidc.admin.resolveAttributes = false
# Policy for access by people in general
#idp.duo.oidc.admin.accessPolicy = AccessByAnyone
# Policy for access by administrators
#idp.duo.oidc.admin.adminAccessPolicy = AccessByAdminUser
# Destination after flow completion.
idp.duo.oidc.admin.landingPage = https://example.org

# Non-Browser AuthAPI integration if desired
#idp.duo.oidc.nonbrowser.apiHost = %{idp.duo.oidc.apiHost}
#idp.duo.oidc.nonbrowser.integrationKey = ikey
# Suggest defining this in credentials/secrets.properties
#idp.duo.oidc.nonbrowser.secretKey = key

# Shouldn't need changing
#idp.duo.oidc.endpoint.health = /oauth/v1/health_check
#idp.duo.oidc.endpoint.token = /oauth/v1/token
#idp.duo.oidc.endpoint.authorize = /oauth/v1/authorize

# With the Nimbus "client" impl, controls for HttpClient behavior
# These default to the global HttpClient options in services.properties
#idp.duo.oidc.connectionTimeout = PT1M
#idp.duo.oidc.connectionRequestTimeout = PT1M
#idp.duo.oidc.socketTimeout = PT1M
#idp.duo.oidc.responseTimeout = PT1M
#idp.duo.oidc.maxConnectionsTotal = 100
#idp.duo.oidc.maxConnectionsPerRoute = 100
# If you want to enable certificate revocation checking with the Nimbus "client",
# you need to enable this property in addition to configuring a suitable means to 
# locate a revocation response, see the plugin documentation.
#idp.duo.oidc.nimbus.checkRevocation = false

# Shouldn't need changing, controls the OIDC id_token claims verification
#idp.duo.oidc.jwt.verifier.clockSkew = PT60S
#idp.duo.oidc.jwt.verifier.iatWindow = PT60S
#idp.duo.oidc.jwt.verifier.issuerPath = /oauth/v1/token 
#idp.duo.oidc.jwt.verifier.preferredUsername = preferred_username
# Applies only to forced authentication
#idp.duo.oidc.jwt.verifier.authLifetime = PT60S

# Write audit entries before the Duo redirect and after response validation
#idp.duo.oidc.audit.enabled = false
# The audit format to use
#idp.duo.oidc.audit.format = %AAF|%a|%T|%DuoU|%DuoRedirect|%DuoCID|%DuoReqS|%DuoRespS|%DuoTXID|%DuoDID|%DuoDN|%DuoR|%DuoF
# The audit category to use
#idp.duo.oidc.audit.category = Shibboleth-Audit.DuoOIDC 